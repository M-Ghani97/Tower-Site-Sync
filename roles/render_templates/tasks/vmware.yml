---
- name: Get list of Datacenters
  community.vmware.vmware_datacenter_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
  register: datacenters

- name: Get list of Cluster
  community.vmware.vmware_cluster_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    datacenter: "{{ item.name }}"
  register: clusters_names
  loop: "{{ datacenters.datacenter_info }}"

- name: Reform Cluster names
  ansible.builtin.set_fact:
    clusters: '{{ clusters | default([]) + item.clusters.keys() | list }}'
  loop: "{{ clusters_names.results }}"

- name: Get list of Templates
  community.vmware.vmware_vm_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    vm_type: template
  register: vm_templates

- name: Get list of Folders
  community.vmware.vmware_folder_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    datacenter: "{{ item.name }}"
  register: folder_names
  loop: "{{ datacenters.datacenter_info }}"

- name: Reform Flat Folder Names
  ansible.builtin.set_fact:
    folders: "{{ folders | default([]) + item.flat_folder_info }}"
  loop: "{{ folder_names.results }}"

- name: Reform VM Folder Name
  ansible.builtin.set_fact:
    vm_folders: "{{ vm_folders | default([]) + [item.path] }}"
  when: item.path is search("/vm/")
  loop: "{{ folders }}"

- name: Get list of Datastores
  community.vmware.vmware_datastore_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    datacenter: "{{ item.name }}"
  register: datastore_names
  loop: "{{ datacenters.datacenter_info }}"

- name: Reform Datastore Names
  ansible.builtin.set_fact:
    datastores: "{{ datastores | default([]) + item.datastores }}"
  loop: "{{ datastore_names.results }}"

- name: Reform All Datastore Names
  ansible.builtin.set_fact:
    vm_datastores: "{{ vm_datastores | default([]) + [item.name] }}"
  loop: "{{ datastores }}"

- name: Get list of Portgroups
  community.vmware.vmware_dvs_portgroup_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    datacenter: "{{ item.name }}"
  register: dvs_portgroup_names
  loop: "{{ datacenters.datacenter_info }}"

- name: Get list of Tags
  community.vmware.vmware_tag_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
  register: tags

- name: Render Templates
  ansible.builtin.template:
    src: "{{ template.src }}"
    dest: "{{ template.dest }}"
    mode: 0600
    force: true
  loop:
    - {src: 'vmware_vm_tagging.j2', dest: 'template_surveys/VMWARE_TAG_VM_{{ vcenter_hostname }}.yml'}
    - {src: 'vmware_vm_provisioning.j2', dest: 'template_surveys/VMWARE_VM_PROVISION_{{ vcenter_hostname }}.yml'}
  loop_control:
    loop_var: template
